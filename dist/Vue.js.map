{"version":3,"file":"Vue.js","sources":["../src/oberser/arr.js","../src/oberser/index.js","../src/initState.js","../src/compile/generate.js","../src/compile/parseAST.js","../src/compile/index.js","../src/init.js","../src/index.js"],"sourcesContent":["// 拿到数组原型方法\r\nlet oldArrayProtoMethods = Array.prototype;\r\n\r\n// 继承\r\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\r\n\r\n// 重写方法\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'unshift',\r\n    'shift',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(item => {\r\n    arrayMethods[item] = function(...args) {\r\n        // console.log('数组劫持');\r\n        // 执行数组方法\r\n        let result = oldArrayProtoMethods[item].apply(this, args);\r\n        // 实现自己的方法，对数组进行劫持\r\n        let inserted;\r\n        switch (item) {// 拿到数组的添加参数\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                inserted = args.splice(2);\r\n                break;\r\n        }\r\n        if (inserted) {\r\n            // 对我们添加的数据进行劫持\r\n            this.__ob__.oberserArray(inserted);\r\n        }\r\n        return result;\r\n    }\r\n})","import { arrayMethods } from './arr'\r\n\r\nexport default function oberser(data) {\r\n    if (typeof data != 'object' || typeof data == null) {\r\n        return data;\r\n    }\r\n    new Oberser(data);\r\n}\r\n\r\nclass Oberser {\r\n    constructor(data) {\r\n        // 把当前观测类的this复制到__ob__属性上，在劫持数组的时候需要调用arrayWalk方法\r\n        Object.defineProperty(data, '__ob__', {\r\n            enumerable: false,\r\n            value: this\r\n        })\r\n        if (Array.isArray(data)) {\r\n            // 重写数组的原型方法\r\n            data.__proto__ = arrayMethods;\r\n            this.oberserArray(data)\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data) {\r\n        let keys = Object.keys(data);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let key = keys[i];\r\n            let value = data[key];\r\n            defineReative(data, key, value);\r\n        }\r\n    }\r\n    oberserArray(data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            oberser(data[i])\r\n        }\r\n    }\r\n}\r\n\r\nfunction defineReative(data, key, value) {\r\n    // Object.defineProperty只能对一个属性进行劫持\r\n    // 在这里递归调用，实现对象的深层劫持\r\n    oberser(value);\r\n    Object.defineProperty(data, key, {\r\n        get() {\r\n            // console.log('获取');\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            // console.log('设置')\r\n            if (value == newValue) return;\r\n            value = newValue;\r\n        }\r\n    })\r\n}","import oberser from \"./oberser/index\";\r\n\r\nexport default function initState(vm) {\r\n    let opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    let _data = vm._data = typeof data === 'function' ? data.call(vm) : data;\r\n    // 代理属性\r\n    for (let key in _data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n    oberser(_data);\r\n}\r\n\r\nfunction proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key];\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;// 插值表达式匹配\r\n\r\n// 处理属性\r\nfunction genProps(attrs) {\r\n    let result = '';\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name == 'style') {\r\n            let value = {};\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, val] = item.split(':');\r\n                value[key] = val;\r\n            })\r\n            attr.value = value;\r\n        }\r\n        result += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${result.slice(0, -1)}}`;\r\n}\r\n\r\n// 处理子节点\r\nfunction genChildren(el) {\r\n    let children = el.children;\r\n    if (children) {\r\n        return children.map(item => gen(item)).join(',')\r\n    }\r\n}\r\n\r\nfunction gen(node) {\r\n    if (node.type === 1) {// 元素进行递归\r\n        return generate(node);\r\n    } else {\r\n        let text = node.text;\r\n        if (!defaultTagRE.test(text)) {// 文本\r\n            return `_v(${text})`\r\n        } else {// 插值表达式\r\n            let match;\r\n            while (match = defaultTagRE.exec(text)) {\r\n                console.log(match)\r\n                break;\r\n            }\r\n            return ''\r\n        }\r\n    }\r\n}\r\n\r\nexport function generate(el) {\r\n    console.log(el)\r\n    let children = genChildren(el);\r\n    let code = `-c(${el.tag}, ${el.attrs.length ? `${genProps(el.attrs)}` : 'null'}), ${children ? children : 'null'})`\r\n    console.log(code)\r\n}","const unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z${unicodeRegExp.source}]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n\r\nfunction createASTElement(tag, attrs) {\r\n  return {\r\n    tag,\r\n    attrs,\r\n    children: [],\r\n    type: 1,\r\n    parent: null\r\n  }\r\n}\r\nlet root;// 根元素\r\nlet createParent;// 当前元素父元素\r\nlet stack=[];// 栈\r\nfunction start(tag, attr) {// 开始标签\r\n  let element = createASTElement(tag, attr);\r\n  if (!root) {\r\n    root = element;\r\n  }\r\n  createParent = element;\r\n  stack.push(element)\r\n}\r\nfunction charts(text) {// 获取文本\r\n  text = text.replace(/s/g, '');\r\n  if (text) {\r\n    createParent.children.push({\r\n      type: 3,\r\n      text\r\n    })\r\n  }\r\n}\r\nfunction end(tag) {// 结束标签\r\n  let element = stack.pop();\r\n  createParent = stack[stack.length -1];\r\n  if (createParent) {\r\n    element.parent = createParent.tag;\r\n    createParent.children.push(element);\r\n  }\r\n}\r\nexport function parseHTML(html) {\r\n  while(html) {\r\n    let textEnd = html.indexOf('<')\r\n    if (textEnd === 0) { // 标签\r\n      // 开始标签\r\n      let startTagMatch = parseStartTag();\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs);\r\n        continue;\r\n      }\r\n      // 结束标签\r\n      let endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        end(endTagMatch[1]);\r\n        advance(endTagMatch[0].length);\r\n        continue;\r\n      }\r\n    } \r\n    let text;\r\n    if (textEnd > 0) {// 文本\r\n      text = html.substring(0, textEnd)\r\n    }\r\n    if (text) {\r\n      charts(text);\r\n      advance(text.length)\r\n    }\r\n  }\r\n  function parseStartTag() {\r\n    let startTag = html.match(startTagOpen);\r\n    if (startTag) {\r\n      // 创建ast语法树\r\n      let match = {\r\n        tagName: startTag[1],\r\n        attrs: []\r\n      }\r\n      // 删除开始标签\r\n      advance(startTag[0].length)\r\n      // 循环遍历属性\r\n      let end,attr;\r\n      while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5]\r\n        })\r\n        advance(attr[0].length)\r\n      }\r\n      // 删除闭合标签并返回语法树\r\n      if (end) {\r\n        advance(end[0].length);\r\n        return match\r\n      }\r\n    }\r\n  }\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n  }\r\n  return root;\r\n}","import { generate } from \"./generate\";\r\nimport { parseHTML } from \"./parseAST\";\r\n\r\nexport function compileToFunction(el) {\r\n  // 1、将html解析成ast语法树\r\n  let ast = parseHTML(el);\r\n  // 2、将ast语法树变成render函数\r\n  let code = generate(ast);\r\n}","import initState from \"./initState\";\r\nimport { compileToFunction } from \"./compile/index\";\r\n\r\nexport default function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) {\r\n        let vm = this;\r\n        vm.$options = options;\r\n        // 初始化状态\r\n        initState(vm);\r\n        // 渲染模版\r\n        if (vm.$options.el) {\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        let vm = this;\r\n        let options = vm.$options;\r\n        // render > template > el\r\n        // 获取dom元素\r\n        el = document.querySelector(el);\r\n        if (!options.render) {\r\n            let template = options.template;\r\n            if (!template && el) {\r\n                // 获取html\r\n                el = el.outerHTML;\r\n                console.log(el)\r\n                // 变成ast语法树\r\n                let ast = compileToFunction(el)\r\n            }\r\n        }\r\n    }\r\n}","import initMixin from \"./init\"\r\n\r\nexport default function Vue(options) {\r\n    this._init(options)\r\n}\r\n\r\n// 为vue原型添加方法\r\ninitMixin(Vue)"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","item","args","result","apply","inserted","splice","__ob__","oberserArray","oberser","data","Oberser","constructor","defineProperty","enumerable","value","isArray","__proto__","walk","keys","i","length","key","defineReative","get","set","newValue","initState","vm","opts","$options","initData","_data","call","proxy","source","defaultTagRE","genProps","attrs","attr","name","split","val","JSON","stringify","slice","genChildren","el","children","map","gen","join","node","type","generate","text","test","match","exec","console","log","code","tag","unicodeRegExp","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","createASTElement","parent","root","createParent","stack","start","element","push","charts","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","tagName","endTagMatch","advance","substring","startTag","n","compileToFunction","ast","initMixin","Vue","_init","options","$mount","document","querySelector","render","template","outerHTML"],"mappings":"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"}